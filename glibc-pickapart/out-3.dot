digraph libcdeps {
 ratio=0.75;
 edge [color=grey70];
 root=libc_start;
 overlap=scale;
libc_start [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_start -> init_first;
init_first [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
init_first -> dl_support;
dl_support [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
dl_support -> getenv;
getenv [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
getenv -> getenv_deps;
getenv_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> enbl_secure;
enbl_secure [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
enbl_secure -> enbl_secure_deps;
enbl_secure_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> strtoul;
strtoul [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
strtoul -> strtoul_deps;
strtoul_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> access;
access [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
access -> access_deps;
access_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> strlen;
strlen [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
dl_support -> init_misc;
init_misc [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
init_misc -> init_misc_deps;
init_misc_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> dl_load;
dl_load [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
dl_load -> dl_load_deps;
dl_load_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> rawmemchr;
rawmemchr [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
dl_support -> getpagesize;
getpagesize [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
getpagesize -> getpagesize_deps;
getpagesize_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> setenv;
setenv [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
setenv -> setenv_deps;
setenv_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> dl_reloc;
dl_reloc [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
dl_reloc -> dl_reloc_deps;
dl_reloc_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
dl_support -> dl_execstack;
dl_execstack [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
dl_execstack -> dl_execstack_deps;
dl_execstack_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
init_first -> enbl_secure;
init_first -> abort;
abort [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
abort -> fcloseall;
fcloseall [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
fcloseall -> fcloseall_deps;
fcloseall_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
abort -> raise;
raise [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
raise -> raise_deps;
raise_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
abort -> genops;
genops [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
genops -> genops_deps;
genops_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
abort -> libc_lowlevellock;
libc_lowlevellock [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
abort -> _exit;
_exit [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
abort -> sigprocmask;
sigprocmask [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
sigprocmask -> sigprocmask_deps;
sigprocmask_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
abort -> sigaction;
sigaction [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
sigaction -> sigaction_deps;
sigaction_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
init_first -> setfpucw;
setfpucw [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
setfpucw -> dl_support;
init_first -> init_misc;
init_first -> fpu_control;
fpu_control [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
init_first -> environ;
environ [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_start -> enbl_secure;
libc_start -> check_fds;
check_fds [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
check_fds -> open;
open [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
open -> libc_cancellation;
libc_cancellation [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
open -> sysdep;
sysdep [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
sysdep -> sysdep_deps;
sysdep_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
check_fds -> fxstat64;
fxstat64 [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
fxstat64 -> errno;
errno [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
check_fds -> fcntl;
fcntl [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
fcntl -> libc_cancellation;
fcntl -> errno;
check_fds -> errno;
libc_start -> exit;
exit [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
exit -> _exit;
exit -> cxa_atexit;
cxa_atexit [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
cxa_atexit -> assert;
assert [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
assert -> assert_deps;
assert_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
cxa_atexit -> libc_lowlevellock;
cxa_atexit -> malloc;
malloc [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
malloc -> malloc_deps;
malloc_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
exit -> malloc;
libc_start -> libc_tls;
libc_tls [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_tls -> dl_support;
libc_tls -> sbrk;
sbrk [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
sbrk -> init_first;
sbrk -> brk;
brk [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
brk -> brk_deps;
brk_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
libc_tls -> memcpy;
memcpy [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_tls -> libc_fatal;
libc_fatal [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_fatal -> mempcpy;
mempcpy [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_fatal -> abort;
libc_fatal -> strlen;
libc_fatal -> strchrnul;
strchrnul [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_fatal -> backtracesymsfd;
backtracesymsfd [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
backtracesymsfd -> backtracesymsfd_deps;
backtracesymsfd_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
libc_fatal -> secure_getenv;
secure_getenv [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
secure_getenv -> secure_getenv_deps;
secure_getenv_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
libc_fatal -> open;
libc_fatal -> backtrace;
backtrace [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
backtrace -> backtrace_deps;
backtrace_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
libc_fatal -> syslog;
syslog [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
syslog -> syslog_deps;
syslog_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
libc_fatal -> read;
read [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
read -> read_deps;
read_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
libc_fatal -> malloc;
libc_fatal -> write;
write [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
write -> write_deps;
write_deps [shape=box fontsize=28 style=bold fontname="Helvetica" color=red];
libc_start -> errno;
libc_start -> dl_sysdep;
dl_sysdep [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
dl_sysdep -> open;
dl_sysdep -> uname;
uname [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
uname -> sysdep;
dl_sysdep -> close;
close [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
close -> libc_cancellation;
close -> sysdep;
dl_sysdep -> read;
libc_start -> libc_fatal;
libc_start -> environ;
libc_start -> open;
libc_start -> dl_support;
libc_start -> close;
libc_start -> elf_init;
elf_init [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
elf_init -> libc_fatal;
libc_start -> read;
libc_start -> exit_thread;
exit_thread [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
exit_thread -> sysdep;
libc_start -> bsd__setjmp;
bsd__setjmp [shape=box fontsize=28 style=filled fillcolor=LightCyan color=blue fontname="Helvetica"];
libc_start -> cxa_atexit;
}
